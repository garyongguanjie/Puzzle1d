module seven_Seg (
    input clk,  // clock
    input rst,  // reset
    input move_counter[16],
    output out_ones[7],
    output out_tens[7]
  ) {

  always {
    out_ones = 7b0000000;
    out_tens = 7b0000000;
    if (move_counter == 0 || move_counter == 10 || move_counter == 20 || move_counter ==30){
      out_ones=7b1111110;
    }else if (move_counter == 1 || move_counter == 11 || move_counter == 21 || move_counter ==31){
      out_ones = 7b0110000;
    }else if (move_counter == 2 || move_counter == 12 || move_counter == 22 || move_counter ==32){
      out_ones=7b1101101;
    }else if (move_counter == 3 || move_counter == 13 || move_counter == 23 || move_counter ==33){
      out_ones=7b1111001;
    }else if (move_counter == 4 || move_counter == 14 || move_counter == 24){
      out_ones=7b0110011;
    }else if (move_counter == 5 || move_counter == 15 || move_counter == 25){
      out_ones=7b1011011;
    }else if (move_counter == 6 || move_counter == 16 || move_counter == 26){
      out_ones=7b1011111;
    }else if (move_counter == 7 || move_counter == 17 || move_counter == 27){
      out_ones=7b1110000;
    }else if (move_counter == 8 || move_counter == 18 || move_counter == 28){
      out_ones=7b1111111;
    }else if (move_counter == 9 || move_counter == 19 || move_counter == 29){
      out_ones=7b1111011;
    }
    
    if (move_counter<10){
      out_tens=7b1111110;}//0
    else if(move_counter<20){
      out_tens=7b0110000;}//1
    else if(move_counter<30){
      out_tens=7b1101101;}//2
    else if(move_counter<40){
      out_tens=7b1111001;}//3
  }
}
