module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output led [8],         // 8 user controllable LEDs
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock    
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)    
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,       // AVR RX buffer full    
    input button_right,
    input button_up,
    input button_down,
    input button_left,
    input button_select,
    
    output rows[7],
    //output red[7],
    output green[7],
    output blue[7]
  ) {
  
  sig rst;                  // reset signal
  
  
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
    edge_detector edge_detector_right(#RISE(1), #FALL(0));
    button_conditioner button_cond_right;
    edge_detector edge_detector_up(#RISE(1), #FALL(0));
    button_conditioner button_cond_up;
    edge_detector edge_detector_down(#RISE(1), #FALL(0));
    button_conditioner button_cond_down;
    edge_detector edge_detector_left(#RISE(1), #FALL(0));
    button_conditioner button_cond_left;
    edge_detector edge_detector_select(#RISE(1), #FALL(0));
    button_conditioner button_cond_select;
    
    
    .rst(rst){
      display display;
      position position;
      dff row[7][7];
      dff check[2];  
      dff move_counter[6];    
      //fsm state = {IDLE, FIRST, GAME, SELECT};
    }
    
    
  }

  always {
    button_cond_right.in = button_right;
    edge_detector_right.in = button_cond_right.out;
    button_cond_up.in = button_up;
    edge_detector_up.in = button_cond_up.out;
    button_cond_down.in = button_down;
    edge_detector_down.in = button_cond_down.out;
    button_cond_left.in = button_left;
    edge_detector_left.in = button_cond_left.out;
    button_cond_select.in = button_select;
    edge_detector_select.in = button_cond_select.out;
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
    
    led = 8h00;             // turn LEDs off
    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial port
    
    position.move = 8;
    
     
    if(check.q==0){
        row.d[0] = 7b0011100;
        row.d[1] = 7b0011100;
        row.d[2] = 7b1111111;
        row.d[3] = 7b1110111;
        row.d[4] = 7b1111111;
        row.d[5] = 7b0011100;
        row.d[6] = 7b0011100;
        check.d = 1;
    }
    if(check.q==1){ //Moving mode
        if(edge_detector_up.out){//up
          position.move = 1;}
        if(edge_detector_down.out){//down
          position.move = 2;}
        if(edge_detector_right.out){//right
          position.move = 3;}
        if(edge_detector_left.out){//left
          position.move = 4;}
        if(edge_detector_select.out){
          check.d = 2;}  
    }
    if(check.q==2){ // Select mode
        //blocking out the corners
        if(position.row==1 && position.column==1){
            check.d = 1;}
        else if(position.row==1 && position.column==2){
            check.d = 1;}
        else if(position.row==1 && position.column==6){
            check.d = 1;}
        else if(position.row==1 && position.column==7){
            check.d = 1;}
        else if(position.row==2 && position.column==1){
            check.d = 1;}
        else if(position.row==2 && position.column==2){
            check.d = 1;}
        else if(position.row==2 && position.column==6){
            check.d = 1;}
        else if(position.row==2 && position.column==7){
            check.d = 1;}
        else if(position.row==6 && position.column==1){
            check.d = 1;}
        else if(position.row==6 && position.column==2){
            check.d = 1;}
        else if(position.row==6 && position.column==6){
            check.d = 1;}
        else if(position.row==6 && position.column==7){
            check.d = 1;}
        else if(position.row==7 && position.column==1){
            check.d = 1;}
        else if(position.row==7 && position.column==2){
            check.d = 1;}
        else if(position.row==7 && position.column==6){
            check.d = 1;}
        if(position.row==7 && position.column==7){
            check.d = 1;}
        
      
        //edge
        else if(position.row==1 && position.column==3){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                if(row.q[position.row][7-position.column]==1 && row.q[position.row+1][7-position.column]==0){
                     row.d[position.row][7-position.column] = 0;
                     row.d[position.row+1][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_right.out){//right
                if(row.q[position.row-1][6-position.column]==1 && row.q[position.row-1][5-position.column]==0){
                     row.d[position.row-1][6-position.column] = 0;
                     row.d[position.row-1][5-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
          
          else if(position.row==1 && position.column==4){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                if(row.q[position.row][7-position.column]==1 && row.q[position.row+1][7-position.column]==0){
                     row.d[position.row][7-position.column] = 0;
                     row.d[position.row+1][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
          
          else if(position.row==1 && position.column==5){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                if(row.q[position.row][7-position.column]==1 && row.q[position.row+1][7-position.column]==0){
                     row.d[position.row][7-position.column] = 0;
                     row.d[position.row+1][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                if(row.q[position.row-1][8-position.column]==1 && row.q[position.row-1][9-position.column]==0){
                     row.d[position.row-1][8-position.column] = 0;
                     row.d[position.row-1][9-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
          }
      
          else if(position.row==2 && position.column==3){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                if(row.q[position.row][7-position.column]==1 && row.q[position.row+1][7-position.column]==0){
                     row.d[position.row][7-position.column] = 0;
                     row.d[position.row+1][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_right.out){//right
                if(row.q[position.row-1][6-position.column]==1 && row.q[position.row-1][5-position.column]==0){
                     row.d[position.row-1][6-position.column] = 0;
                     row.d[position.row-1][5-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
          
          else if(position.row==2 && position.column==4){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                if(row.q[position.row][7-position.column]==1 && row.q[position.row+1][7-position.column]==0){
                     row.d[position.row][7-position.column] = 0;
                     row.d[position.row+1][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
          
          else if(position.row==2 && position.column==5){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                if(row.q[position.row][7-position.column]==1 && row.q[position.row+1][7-position.column]==0){
                     row.d[position.row][7-position.column] = 0;
                     row.d[position.row+1][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                if(row.q[position.row-1][8-position.column]==1 && row.q[position.row-1][9-position.column]==0){
                     row.d[position.row-1][8-position.column] = 0;
                     row.d[position.row-1][9-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
          }
       
          else if(position.row==3 && position.column==1){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                if(row.q[position.row][7-position.column]==1 && row.q[position.row+1][7-position.column]==0){
                     row.d[position.row][7-position.column] = 0;
                     row.d[position.row+1][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_right.out){//right
               if(row.q[position.row-1][6-position.column]==1 && row.q[position.row-1][5-position.column]==0){
                     row.d[position.row-1][6-position.column] = 0;
                     row.d[position.row-1][5-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
      
          else if(position.row==3 && position.column==2){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                if(row.q[position.row][7-position.column]==1 && row.q[position.row+1][7-position.column]==0){
                     row.d[position.row][7-position.column] = 0;
                     row.d[position.row+1][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_right.out){//right
                if(row.q[position.row-1][6-position.column]==1 && row.q[position.row-1][5-position.column]==0){
                     row.d[position.row-1][6-position.column] = 0;
                     row.d[position.row-1][5-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
      
          else if(position.row==4 && position.column==1){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                if(row.q[position.row-1][6-position.column]==1 && row.q[position.row-1][5-position.column]==0){
                     row.d[position.row-1][6-position.column] = 0;
                     row.d[position.row-1][5-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
      
          else if(position.row==4 && position.column==2){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                if(row.q[position.row-1][6-position.column]==1 && row.q[position.row-1][5-position.column]==0){
                     row.d[position.row-1][6-position.column] = 0;
                     row.d[position.row-1][5-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
      
          else if(position.row==5 && position.column==1){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                if(row.q[position.row-2][7-position.column]==1 && row.q[position.row-3][7-position.column]==0){
                     row.d[position.row-2][7-position.column] = 0;
                     row.d[position.row-3][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                if(row.q[position.row-1][6-position.column]==1 && row.q[position.row-1][5-position.column]==0){
                     row.d[position.row-1][6-position.column] = 0;
                     row.d[position.row-1][5-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
      
          else if(position.row==5 && position.column==2){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                if(row.q[position.row-2][7-position.column]==1 && row.q[position.row-3][7-position.column]==0){
                     row.d[position.row-2][7-position.column] = 0;
                     row.d[position.row-3][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                if(row.q[position.row-1][6-position.column]==1 && row.q[position.row-1][5-position.column]==0){
                     row.d[position.row-1][6-position.column] = 0;
                     row.d[position.row-1][5-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
      
          else if(position.row==6 && position.column==3){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                if(row.q[position.row-2][7-position.column]==1 && row.q[position.row-3][7-position.column]==0){
                     row.d[position.row-2][7-position.column] = 0;
                     row.d[position.row-3][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                if(row.q[position.row-1][6-position.column]==1 && row.q[position.row-1][5-position.column]==0){
                     row.d[position.row-1][6-position.column] = 0;
                     row.d[position.row-1][5-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
      
          else if(position.row==6 && position.column==4){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                if(row.q[position.row-2][7-position.column]==1 && row.q[position.row-3][7-position.column]==0){
                     row.d[position.row-2][7-position.column] = 0;
                     row.d[position.row-3][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
      
          else if(position.row==6 && position.column==5){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                if(row.q[position.row-2][7-position.column]==1 && row.q[position.row-3][7-position.column]==0){
                     row.d[position.row-2][7-position.column] = 0;
                     row.d[position.row-3][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                if(row.q[position.row-1][8-position.column]==1 && row.q[position.row-1][9-position.column]==0){
                     row.d[position.row-1][8-position.column] = 0;
                     row.d[position.row-1][9-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
          }
      
          else if(position.row==7 && position.column==3){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                if(row.q[position.row-2][7-position.column]==1 && row.q[position.row-3][7-position.column]==0){
                     row.d[position.row-2][7-position.column] = 0;
                     row.d[position.row-3][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                if(row.q[position.row-1][6-position.column]==1 && row.q[position.row-1][5-position.column]==0){
                     row.d[position.row-1][6-position.column] = 0;
                     row.d[position.row-1][5-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
      
          else if(position.row==7 && position.column==4){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                if(row.q[position.row-2][7-position.column]==1 && row.q[position.row-3][7-position.column]==0){
                     row.d[position.row-2][7-position.column] = 0;
                     row.d[position.row-3][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                check.d=1;}
          }
      
          else if(position.row==7 && position.column==5){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                if(row.q[position.row-2][7-position.column]==1 && row.q[position.row-3][7-position.column]==0){
                     row.d[position.row-2][7-position.column] = 0;
                     row.d[position.row-3][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                 if(row.q[position.row-1][8-position.column]==1 && row.q[position.row-1][9-position.column]==0){
                     row.d[position.row-1][8-position.column] = 0;
                     row.d[position.row-1][9-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
          }
      
          else if(position.row==3 && position.column==6){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                if(row.q[position.row][7-position.column]==1 && row.q[position.row+1][7-position.column]==0){
                     row.d[position.row][7-position.column] = 0;
                     row.d[position.row+1][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                if(row.q[position.row-1][8-position.column]==1 && row.q[position.row-1][9-position.column]==0){
                     row.d[position.row-1][8-position.column] = 0;
                     row.d[position.row-1][9-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
          }
      
          else if(position.row==3 && position.column==7){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                if(row.q[position.row][7-position.column]==1 && row.q[position.row+1][7-position.column]==0){
                     row.d[position.row][7-position.column] = 0;
                     row.d[position.row+1][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                if(row.q[position.row-1][8-position.column]==1 && row.q[position.row-1][9-position.column]==0){
                     row.d[position.row-1][8-position.column] = 0;
                     row.d[position.row-1][9-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
          }
      
          else if(position.row==4 && position.column==6){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                if(row.q[position.row-1][8-position.column]==1 && row.q[position.row-1][9-position.column]==0){
                     row.d[position.row-1][8-position.column] = 0;
                     row.d[position.row-1][9-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
          }
      
          else if(position.row==4 && position.column==7){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                check.d=1;}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                if(row.q[position.row-1][8-position.column]==1 && row.q[position.row-1][9-position.column]==0){
                     row.d[position.row-1][8-position.column] = 0;
                     row.d[position.row-1][9-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
          }
      
          else if(position.row==5 && position.column==6){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                if(row.q[position.row-2][7-position.column]==1 && row.q[position.row-3][7-position.column]==0){
                     row.d[position.row-2][7-position.column] = 0;
                     row.d[position.row-3][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                if(row.q[position.row-1][8-position.column]==1 && row.q[position.row-1][9-position.column]==0){
                     row.d[position.row-1][8-position.column] = 0;
                     row.d[position.row-1][9-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
          }
      
          else if(position.row==5 && position.column==7){
            if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                if(row.q[position.row-2][7-position.column]==1 && row.q[position.row-3][7-position.column]==0){
                     row.d[position.row-2][7-position.column] = 0;
                     row.d[position.row-3][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
            if(edge_detector_down.out){//down
                check.d=1;}
             if(edge_detector_right.out){//right
                check.d=1;}
             if(edge_detector_left.out){//left
                if(row.q[position.row-1][8-position.column]==1 && row.q[position.row-1][9-position.column]==0){
                     row.d[position.row-1][8-position.column] = 0;
                     row.d[position.row-1][9-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
          }
          else{if(row.q[position.row-1][7-position.column]==0){
                check.d=1;}
            if(edge_detector_up.out){//up
                if(row.q[position.row-2][7-position.column]==1 && row.q[position.row-3][7-position.column]==0){
                     row.d[position.row-2][7-position.column] = 0;
                     row.d[position.row-3][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
            if(edge_detector_down.out){//down
                if(row.q[position.row][7-position.column]==1 && row.q[position.row+1][7-position.column]==0){
                     row.d[position.row][7-position.column] = 0;
                     row.d[position.row+1][7-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_right.out){//right
                if(row.q[position.row-1][6-position.column]==1 && row.q[position.row-1][5-position.column]==0){
                     row.d[position.row-1][6-position.column] = 0;
                     row.d[position.row-1][5-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}
             if(edge_detector_left.out){//left
                if(row.q[position.row-1][8-position.column]==1 && row.q[position.row-1][9-position.column]==0){
                     row.d[position.row-1][8-position.column] = 0;
                     row.d[position.row-1][9-position.column]= 1;
                     row.d[position.row-1][7-position.column] = 0;
                     move_counter.d = move_counter.q+1;
                     check.d = 1;
                }else{check.d=1;}}}
 
      
      
          
      
    }     

         
    

    
    
    display.blue[0] = row.q[0];
    display.blue[1] = row.q[1];
    display.blue[2] = row.q[2];
    display.blue[3] = row.q[3];
    display.blue[4] = row.q[4];
    display.blue[5] = row.q[5];
    display.blue[6] = row.q[6];
    display.green = position.green;


    
    green = display.out_green;
    blue = display.out_blue;
    rows = display.rows; 

    
  }
}